When would you want to use a remote repository rather than keeping all your work
local?

I would prefer to use a remote repository when I am working with multiple
people rather than working only.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

For exactly the same reason as you want to manually decide when to commit a
change. Automatic ambiguous changes can cause more problmes (in the long run)
than solutions. The purpose of git is to make you a more EFFICIENT
programmer. Introducing errors via automated pull and push request defeats that
purpose.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

Fork is "clone" for two GitHub repositories
Clone is a copy of repository on the local computer with meta data that is
actionable by git.
Branch is a separation of two paths in the commit history of a
repository. Either locally housed or remotely.

What is the benefit of having a copy of the last known state of the remote
stored locally?

It enables one to work with confidence concerning the most recent changes and
helps work entirely offline knowing that every committed changes in the remote
repository resides in your local repository.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

I wouldn't: since learning about version control (GitHub) last year, I have
mandated that every member of the lab learn the software. As to the seond
question, it would be easier to send files without the Git based overhead, but
it would be MUCH harder to track changes (version/history control) and even
more difficult to know when something has gone wrong in the code base. Git(Hub)
helps to keep those information obvious, preventing, otherwise, difficult to
track errors.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
